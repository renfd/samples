
Coin = function() {

	Coin.superclass.constructor.call(this);

	//Coin settings
	this.mRadius = 0;

	// Pointers to Game constructor, Game assets, and the game screen
	this.gGame   	= TGE.Game.GetInstance();
	this.gAssets 	= this.gGame.GetAssets();
	this.gameScreen = this.gGame.GetGameScreen();

    // Destroy on screen exit
    this.cullToViewport(false,false,false,true);

    this.useWorldPosition(true);

	// Adds update event listener which calls updateCoin every frame
    this.addEventListener("update", this.updateCoin.bind(this));
}

Coin.prototype = {


	setupCoin : function(params) 
	{

		var settings = this.gAssets.coinSettings;
		
		this.mRadius = settings.radius;

       	this.addChild(new TGE.SpriteSheetAnimation().setup({
			looping: 	  true,
			visible: 	  true,
			image: 		  settings.image,
			rows: 		  settings.rows,
			columns: 	  settings.columns,
			totalFrames:  settings.totalFrames,
			fps: 		  settings.fps,
		}));

		// Send any altered params back
		Coin.superclass.setup.call(this,params);
    	return this;
	},

	updateCoin : function()
	{
		this.detectCollisions();
	},




	detectCollisions : function()
	{
		var playerBounds = this.gameScreen.getPlayer().getBounds();
		var coinBounds   = this.getBounds();

		if (coinBounds.intersects(playerBounds, this.mRadius, 0.7)) {
        	this.gameScreen.playerHitCoin();
        	this.markForRemoval();
		}	
	},
	
	
}

extend(Coin, TGE.DisplayObjectContainer);